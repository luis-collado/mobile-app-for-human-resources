{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { TextInput, Button, HelperText, Title } from 'react-native-paper';\nimport * as FileSystem from 'expo-file-system';\nimport Papa from 'papaparse';\nvar LoginScreen = function LoginScreen() {\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    email = _useState2[0],\n    setEmail = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var handleLogin = function () {\n    var _ref = _asyncToGenerator(function* () {\n      console.log('Email:', email);\n      console.log('Password:', password);\n      var csvData = Papa.unparse([{\n        email: email,\n        password: password\n      }]);\n      var path = FileSystem.documentDirectory + \"credentials.csv\";\n      try {\n        yield FileSystem.writeAsStringAsync(path, csvData, {\n          encoding: FileSystem.EncodingType.UTF8\n        });\n        console.log(\"Credentials saved to \" + path);\n      } catch (error) {\n        console.error('Error writing CSV file:', error);\n      }\n    });\n    return function handleLogin() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};\nexport default LoginScreen;","map":{"version":3,"names":["React","useState","View","StyleSheet","Image","TextInput","Button","HelperText","Title","FileSystem","Papa","LoginScreen","_useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","password","setPassword","handleLogin","_ref","_asyncToGenerator","console","log","csvData","unparse","path","documentDirectory","writeAsStringAsync","encoding","EncodingType","UTF8","error","apply","arguments"],"sources":["C:/Users/crake/VisualWorkspace/chatgpt/MarlexAppExpo/src/LoginScreen.js"],"sourcesContent":["import React, {useState} from 'react';\r\nimport {View, StyleSheet, Image} from 'react-native';\r\nimport {TextInput, Button, HelperText, Title} from 'react-native-paper';\r\nimport * as FileSystem from 'expo-file-system';\r\nimport Papa from 'papaparse';\r\n\r\nconst LoginScreen = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const handleLogin = async () => {\r\n    // Aquí puedes implementar la lógica de inicio de sesión con tu backend\r\n    console.log('Email:', email);\r\n    console.log('Password:', password);\r\n\r\n    // Guardar correo electrónico y contraseña en un archivo CSV\r\n    const csvData = Papa.unparse([{\r\n      email,\r\n      password\r\n    }]);\r\n\r\n    const path = `${FileSystem.documentDirectory}credentials.csv`;\r\n    try {\r\n      await FileSystem.writeAsStringAsync(path, csvData, { encoding: FileSystem.EncodingType.UTF8 });\r\n      console.log(`Credentials saved to ${path}`);\r\n    } catch (error) {\r\n      console.error('Error writing CSV file:', error);\r\n    }\r\n  };\r\n\r\n  // ... Resto del componente ...\r\n};\r\n\r\nexport default LoginScreen;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,KAAA;AAEtC,SAAQC,SAAS,EAAEC,MAAM,EAAEC,UAAU,EAAEC,KAAK,QAAO,oBAAoB;AACvE,OAAO,KAAKC,UAAU,MAAM,kBAAkB;AAC9C,OAAOC,IAAI,MAAM,WAAW;AAE5B,IAAMC,WAAW,GAAG,SAAdA,WAAWA,CAAA,EAAS;EACxB,IAAAC,SAAA,GAA0BX,QAAQ,CAAC,EAAE,CAAC;IAAAY,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA/BG,KAAK,GAAAF,UAAA;IAAEG,QAAQ,GAAAH,UAAA;EACtB,IAAAI,UAAA,GAAgChB,QAAQ,CAAC,EAAE,CAAC;IAAAiB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAArCE,QAAQ,GAAAD,UAAA;IAAEE,WAAW,GAAAF,UAAA;EAE5B,IAAMG,WAAW;IAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,aAAY;MAE9BC,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEV,KAAK,CAAC;MAC5BS,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEN,QAAQ,CAAC;MAGlC,IAAMO,OAAO,GAAGhB,IAAI,CAACiB,OAAO,CAAC,CAAC;QAC5BZ,KAAK,EAALA,KAAK;QACLI,QAAQ,EAARA;MACF,CAAC,CAAC,CAAC;MAEH,IAAMS,IAAI,GAAMnB,UAAU,CAACoB,iBAAiB,oBAAiB;MAC7D,IAAI;QACF,MAAMpB,UAAU,CAACqB,kBAAkB,CAACF,IAAI,EAAEF,OAAO,EAAE;UAAEK,QAAQ,EAAEtB,UAAU,CAACuB,YAAY,CAACC;QAAK,CAAC,CAAC;QAC9FT,OAAO,CAACC,GAAG,2BAAyBG,IAAI,CAAG;MAC7C,CAAC,CAAC,OAAOM,KAAK,EAAE;QACdV,OAAO,CAACU,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MACjD;IACF,CAAC;IAAA,gBAlBKb,WAAWA,CAAA;MAAA,OAAAC,IAAA,CAAAa,KAAA,OAAAC,SAAA;IAAA;EAAA,GAkBhB;AAGH,CAAC;AAED,eAAezB,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}
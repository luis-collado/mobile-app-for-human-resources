{"ast":null,"code":"import { defineAnimation } from \"./util\";\nexport function withSpring(toValue, userConfig, callback) {\n  'worklet';\n\n  return defineAnimation(toValue, function () {\n    'worklet';\n    var config = {\n      damping: 10,\n      mass: 1,\n      stiffness: 100,\n      overshootClamping: false,\n      restDisplacementThreshold: 0.01,\n      restSpeedThreshold: 2,\n      velocity: 0\n    };\n    if (userConfig) {\n      Object.keys(userConfig).forEach(function (key) {\n        return config[key] = userConfig[key];\n      });\n    }\n    function spring(animation, now) {\n      var toValue = animation.toValue,\n        lastTimestamp = animation.lastTimestamp,\n        current = animation.current,\n        velocity = animation.velocity;\n      var deltaTime = Math.min(now - lastTimestamp, 64);\n      animation.lastTimestamp = now;\n      var c = config.damping;\n      var m = config.mass;\n      var k = config.stiffness;\n      var v0 = -velocity;\n      var x0 = toValue - current;\n      var zeta = c / (2 * Math.sqrt(k * m));\n      var omega0 = Math.sqrt(k / m);\n      var omega1 = omega0 * Math.sqrt(1 - Math.pow(zeta, 2));\n      var t = deltaTime / 1000;\n      var sin1 = Math.sin(omega1 * t);\n      var cos1 = Math.cos(omega1 * t);\n      var underDampedEnvelope = Math.exp(-zeta * omega0 * t);\n      var underDampedFrag1 = underDampedEnvelope * (sin1 * ((v0 + zeta * omega0 * x0) / omega1) + x0 * cos1);\n      var underDampedPosition = toValue - underDampedFrag1;\n      var underDampedVelocity = zeta * omega0 * underDampedFrag1 - underDampedEnvelope * (cos1 * (v0 + zeta * omega0 * x0) - omega1 * x0 * sin1);\n      var criticallyDampedEnvelope = Math.exp(-omega0 * t);\n      var criticallyDampedPosition = toValue - criticallyDampedEnvelope * (x0 + (v0 + omega0 * x0) * t);\n      var criticallyDampedVelocity = criticallyDampedEnvelope * (v0 * (t * omega0 - 1) + t * x0 * omega0 * omega0);\n      var isOvershooting = function isOvershooting() {\n        if (config.overshootClamping && config.stiffness !== 0) {\n          return current < toValue ? animation.current > toValue : animation.current < toValue;\n        } else {\n          return false;\n        }\n      };\n      var isVelocity = Math.abs(velocity) < config.restSpeedThreshold;\n      var isDisplacement = config.stiffness === 0 || Math.abs(toValue - current) < config.restDisplacementThreshold;\n      if (zeta < 1) {\n        animation.current = underDampedPosition;\n        animation.velocity = underDampedVelocity;\n      } else {\n        animation.current = criticallyDampedPosition;\n        animation.velocity = criticallyDampedVelocity;\n      }\n      if (isOvershooting() || isVelocity && isDisplacement) {\n        if (config.stiffness !== 0) {\n          animation.velocity = 0;\n          animation.current = toValue;\n        }\n        animation.lastTimestamp = 0;\n        return true;\n      }\n      return false;\n    }\n    function onStart(animation, value, now, previousAnimation) {\n      animation.current = value;\n      if (previousAnimation) {\n        animation.velocity = previousAnimation.velocity || animation.velocity || 0;\n        animation.lastTimestamp = previousAnimation.lastTimestamp || now;\n      } else {\n        animation.lastTimestamp = now;\n      }\n    }\n    return {\n      onFrame: spring,\n      onStart: onStart,\n      toValue: toValue,\n      velocity: config.velocity || 0,\n      current: toValue,\n      callback: callback,\n      lastTimestamp: 0\n    };\n  });\n}","map":{"version":3,"names":["defineAnimation","withSpring","toValue","userConfig","callback","config","damping","mass","stiffness","overshootClamping","restDisplacementThreshold","restSpeedThreshold","velocity","Object","keys","forEach","key","spring","animation","now","lastTimestamp","current","deltaTime","Math","min","c","m","k","v0","x0","zeta","sqrt","omega0","omega1","pow","t","sin1","sin","cos1","cos","underDampedEnvelope","exp","underDampedFrag1","underDampedPosition","underDampedVelocity","criticallyDampedEnvelope","criticallyDampedPosition","criticallyDampedVelocity","isOvershooting","isVelocity","abs","isDisplacement","onStart","value","previousAnimation","onFrame"],"sources":["D:/Desktop/Tim/mobile-app-for-human-resources/node_modules/react-native-reanimated/lib/reanimated2/animation/spring.js"],"sourcesContent":["import { defineAnimation } from './util';\r\nexport function withSpring(toValue, userConfig, callback) {\r\n    'worklet';\r\n    return defineAnimation(toValue, () => {\r\n        'worklet';\r\n        // TODO: figure out why we can't use spread or Object.assign here\r\n        // when user config is \"frozen object\" we can't enumerate it (perhaps\r\n        // something is wrong with the object prototype).\r\n        const config = {\r\n            damping: 10,\r\n            mass: 1,\r\n            stiffness: 100,\r\n            overshootClamping: false,\r\n            restDisplacementThreshold: 0.01,\r\n            restSpeedThreshold: 2,\r\n            velocity: 0,\r\n        };\r\n        if (userConfig) {\r\n            Object.keys(userConfig).forEach((key) => (config[key] = userConfig[key]));\r\n        }\r\n        function spring(animation, now) {\r\n            const { toValue, lastTimestamp, current, velocity } = animation;\r\n            const deltaTime = Math.min(now - lastTimestamp, 64);\r\n            animation.lastTimestamp = now;\r\n            const c = config.damping;\r\n            const m = config.mass;\r\n            const k = config.stiffness;\r\n            const v0 = -velocity;\r\n            const x0 = toValue - current;\r\n            const zeta = c / (2 * Math.sqrt(k * m)); // damping ratio\r\n            const omega0 = Math.sqrt(k / m); // undamped angular frequency of the oscillator (rad/ms)\r\n            const omega1 = omega0 * Math.sqrt(1 - Math.pow(zeta, 2)); // exponential decay\r\n            const t = deltaTime / 1000;\r\n            const sin1 = Math.sin(omega1 * t);\r\n            const cos1 = Math.cos(omega1 * t);\r\n            // under damped\r\n            const underDampedEnvelope = Math.exp(-zeta * omega0 * t);\r\n            const underDampedFrag1 = underDampedEnvelope *\r\n                (sin1 * ((v0 + zeta * omega0 * x0) / omega1) + x0 * cos1);\r\n            const underDampedPosition = toValue - underDampedFrag1;\r\n            // This looks crazy -- it's actually just the derivative of the oscillation function\r\n            const underDampedVelocity = zeta * omega0 * underDampedFrag1 -\r\n                underDampedEnvelope *\r\n                    (cos1 * (v0 + zeta * omega0 * x0) - omega1 * x0 * sin1);\r\n            // critically damped\r\n            const criticallyDampedEnvelope = Math.exp(-omega0 * t);\r\n            const criticallyDampedPosition = toValue - criticallyDampedEnvelope * (x0 + (v0 + omega0 * x0) * t);\r\n            const criticallyDampedVelocity = criticallyDampedEnvelope *\r\n                (v0 * (t * omega0 - 1) + t * x0 * omega0 * omega0);\r\n            const isOvershooting = () => {\r\n                if (config.overshootClamping && config.stiffness !== 0) {\r\n                    return current < toValue\r\n                        ? animation.current > toValue\r\n                        : animation.current < toValue;\r\n                }\r\n                else {\r\n                    return false;\r\n                }\r\n            };\r\n            const isVelocity = Math.abs(velocity) < config.restSpeedThreshold;\r\n            const isDisplacement = config.stiffness === 0 ||\r\n                Math.abs(toValue - current) < config.restDisplacementThreshold;\r\n            if (zeta < 1) {\r\n                animation.current = underDampedPosition;\r\n                animation.velocity = underDampedVelocity;\r\n            }\r\n            else {\r\n                animation.current = criticallyDampedPosition;\r\n                animation.velocity = criticallyDampedVelocity;\r\n            }\r\n            if (isOvershooting() || (isVelocity && isDisplacement)) {\r\n                if (config.stiffness !== 0) {\r\n                    animation.velocity = 0;\r\n                    animation.current = toValue;\r\n                }\r\n                // clear lastTimestamp to avoid using stale value by the next spring animation that starts after this one\r\n                animation.lastTimestamp = 0;\r\n                return true;\r\n            }\r\n            return false;\r\n        }\r\n        function onStart(animation, value, now, previousAnimation) {\r\n            animation.current = value;\r\n            if (previousAnimation) {\r\n                animation.velocity =\r\n                    previousAnimation.velocity || animation.velocity || 0;\r\n                animation.lastTimestamp = previousAnimation.lastTimestamp || now;\r\n            }\r\n            else {\r\n                animation.lastTimestamp = now;\r\n            }\r\n        }\r\n        return {\r\n            onFrame: spring,\r\n            onStart,\r\n            toValue,\r\n            velocity: config.velocity || 0,\r\n            current: toValue,\r\n            callback,\r\n            lastTimestamp: 0,\r\n        };\r\n    });\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
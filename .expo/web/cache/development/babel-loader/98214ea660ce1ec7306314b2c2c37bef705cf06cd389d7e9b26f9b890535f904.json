{"ast":null,"code":"import React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport overlay from \"../../styles/overlay\";\nimport { black, white } from \"../../styles/themes/v2/colors\";\nimport Tooltip from \"../Tooltip/Tooltip\";\nimport AppbarAction from \"./AppbarAction\";\nimport AppbarBackAction from \"./AppbarBackAction\";\nimport AppbarContent from \"./AppbarContent\";\nexport var getAppbarColor = function getAppbarColor(theme, elevation, customBackground, elevated) {\n  var isV3 = theme.isV3,\n    isDarkTheme = theme.dark,\n    mode = theme.mode,\n    colors = theme.colors;\n  var isAdaptiveMode = mode === 'adaptive';\n  if (customBackground) {\n    return customBackground;\n  }\n  if (!isV3) {\n    if (isDarkTheme && isAdaptiveMode) {\n      return overlay(elevation, colors === null || colors === void 0 ? void 0 : colors.surface);\n    }\n    return colors.primary;\n  }\n  if (elevated) {\n    return theme.colors.elevation.level2;\n  }\n  return colors.surface;\n};\nexport var DEFAULT_APPBAR_HEIGHT = 56;\nvar MD3_DEFAULT_APPBAR_HEIGHT = 64;\nexport var modeAppbarHeight = {\n  small: MD3_DEFAULT_APPBAR_HEIGHT,\n  medium: 112,\n  large: 152,\n  'center-aligned': MD3_DEFAULT_APPBAR_HEIGHT\n};\nexport var modeTextVariant = {\n  small: 'titleLarge',\n  medium: 'headlineSmall',\n  large: 'headlineMedium',\n  'center-aligned': 'titleLarge'\n};\nexport var renderAppbarContent = function renderAppbarContent(_ref) {\n  var children = _ref.children,\n    isDark = _ref.isDark,\n    _ref$shouldCenterCont = _ref.shouldCenterContent,\n    shouldCenterContent = _ref$shouldCenterCont === void 0 ? false : _ref$shouldCenterCont,\n    isV3 = _ref.isV3,\n    renderOnly = _ref.renderOnly,\n    renderExcept = _ref.renderExcept,\n    _ref$mode = _ref.mode,\n    mode = _ref$mode === void 0 ? 'small' : _ref$mode,\n    theme = _ref.theme;\n  return React.Children.toArray(children).filter(function (child) {\n    return child != null && typeof child !== 'boolean';\n  }).filter(function (child) {\n    return renderExcept ? !renderExcept.includes(child.type) : child;\n  }).filter(function (child) {\n    return renderOnly ? renderOnly.includes(child.type) : child;\n  }).map(function (child, i) {\n    if (!React.isValidElement(child) || ![AppbarContent, AppbarAction, AppbarBackAction, Tooltip].includes(child.type)) {\n      return child;\n    }\n    var props = {\n      theme: theme,\n      color: typeof child.props.color !== 'undefined' ? child.props.color : isV3 ? undefined : isDark ? white : black\n    };\n    if (child.type === AppbarContent) {\n      props.mode = mode;\n      props.style = [isV3 ? i === 0 && !shouldCenterContent && styles.v3Spacing : i !== 0 && styles.v2Spacing, shouldCenterContent && styles.centerAlignedContent, child.props.style];\n    }\n    return React.cloneElement(child, props);\n  });\n};\nvar styles = StyleSheet.create({\n  centerAlignedContent: {\n    alignItems: 'center'\n  },\n  v2Spacing: {\n    marginLeft: 8\n  },\n  v3Spacing: {\n    marginLeft: 12\n  }\n});","map":{"version":3,"names":["React","StyleSheet","overlay","black","white","Tooltip","AppbarAction","AppbarBackAction","AppbarContent","getAppbarColor","theme","elevation","customBackground","elevated","isV3","isDarkTheme","dark","mode","colors","isAdaptiveMode","surface","primary","level2","DEFAULT_APPBAR_HEIGHT","MD3_DEFAULT_APPBAR_HEIGHT","modeAppbarHeight","small","medium","large","modeTextVariant","renderAppbarContent","_ref","children","isDark","_ref$shouldCenterCont","shouldCenterContent","renderOnly","renderExcept","_ref$mode","Children","toArray","filter","child","includes","type","map","i","isValidElement","props","color","undefined","style","styles","v3Spacing","v2Spacing","centerAlignedContent","cloneElement","create","alignItems","marginLeft"],"sources":["D:\\Desktop\\Tim\\mobile-app-for-human-resources\\node_modules\\react-native-paper\\src\\components\\Appbar\\utils.ts"],"sourcesContent":["import React from 'react';\r\nimport type { ColorValue, StyleProp, ViewStyle } from 'react-native';\r\nimport { StyleSheet } from 'react-native';\r\n\r\nimport overlay from '../../styles/overlay';\r\nimport { black, white } from '../../styles/themes/v2/colors';\r\nimport type { InternalTheme, ThemeProp } from '../../types';\r\nimport Tooltip from '../Tooltip/Tooltip';\r\nimport AppbarAction from './AppbarAction';\r\nimport AppbarBackAction from './AppbarBackAction';\r\nimport AppbarContent from './AppbarContent';\r\n\r\nexport type AppbarModes = 'small' | 'medium' | 'large' | 'center-aligned';\r\n\r\nexport const getAppbarColor = (\r\n  theme: InternalTheme,\r\n  elevation: number,\r\n  customBackground?: ColorValue,\r\n  elevated?: boolean\r\n) => {\r\n  const { isV3, dark: isDarkTheme, mode, colors } = theme;\r\n  const isAdaptiveMode = mode === 'adaptive';\r\n  if (customBackground) {\r\n    return customBackground;\r\n  }\r\n\r\n  if (!isV3) {\r\n    if (isDarkTheme && isAdaptiveMode) {\r\n      return overlay(elevation, colors?.surface);\r\n    }\r\n\r\n    return colors.primary;\r\n  }\r\n\r\n  if (elevated) {\r\n    return theme.colors.elevation.level2;\r\n  }\r\n\r\n  return colors.surface;\r\n};\r\n\r\ntype RenderAppbarContentProps = {\r\n  children: React.ReactNode;\r\n  isDark: boolean;\r\n  shouldCenterContent?: boolean;\r\n  isV3: boolean;\r\n  renderOnly?: (React.ComponentType<any> | false)[];\r\n  renderExcept?: React.ComponentType<any>[];\r\n  mode?: AppbarModes;\r\n  theme?: ThemeProp;\r\n};\r\n\r\nexport const DEFAULT_APPBAR_HEIGHT = 56;\r\nconst MD3_DEFAULT_APPBAR_HEIGHT = 64;\r\n\r\nexport const modeAppbarHeight = {\r\n  small: MD3_DEFAULT_APPBAR_HEIGHT,\r\n  medium: 112,\r\n  large: 152,\r\n  'center-aligned': MD3_DEFAULT_APPBAR_HEIGHT,\r\n};\r\n\r\nexport const modeTextVariant = {\r\n  small: 'titleLarge',\r\n  medium: 'headlineSmall',\r\n  large: 'headlineMedium',\r\n  'center-aligned': 'titleLarge',\r\n} as const;\r\n\r\nexport const renderAppbarContent = ({\r\n  children,\r\n  isDark,\r\n  shouldCenterContent = false,\r\n  isV3,\r\n  renderOnly,\r\n  renderExcept,\r\n  mode = 'small',\r\n  theme,\r\n}: RenderAppbarContentProps) => {\r\n  return (\r\n    React.Children.toArray(children as React.ReactNode | React.ReactNode[])\r\n      .filter((child) => child != null && typeof child !== 'boolean')\r\n      .filter((child) =>\r\n        // @ts-expect-error: TypeScript complains about the type of type but it doesn't matter\r\n        renderExcept ? !renderExcept.includes(child.type) : child\r\n      )\r\n      // @ts-expect-error: TypeScript complains about the type of type but it doesn't matter\r\n      .filter((child) => (renderOnly ? renderOnly.includes(child.type) : child))\r\n      .map((child, i) => {\r\n        if (\r\n          !React.isValidElement(child) ||\r\n          ![AppbarContent, AppbarAction, AppbarBackAction, Tooltip].includes(\r\n            // @ts-expect-error: TypeScript complains about the type of type but it doesn't matter\r\n            child.type\r\n          )\r\n        ) {\r\n          return child;\r\n        }\r\n\r\n        const props: {\r\n          color?: string;\r\n          style?: StyleProp<ViewStyle>;\r\n          mode?: AppbarModes;\r\n          theme?: ThemeProp;\r\n        } = {\r\n          theme,\r\n          color:\r\n            typeof child.props.color !== 'undefined'\r\n              ? child.props.color\r\n              : isV3\r\n              ? undefined\r\n              : isDark\r\n              ? white\r\n              : black,\r\n        };\r\n\r\n        if (child.type === AppbarContent) {\r\n          props.mode = mode;\r\n          props.style = [\r\n            isV3\r\n              ? i === 0 && !shouldCenterContent && styles.v3Spacing\r\n              : i !== 0 && styles.v2Spacing,\r\n            shouldCenterContent && styles.centerAlignedContent,\r\n            child.props.style,\r\n          ];\r\n        }\r\n        return React.cloneElement(child, props);\r\n      })\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  centerAlignedContent: {\r\n    alignItems: 'center',\r\n  },\r\n  v2Spacing: {\r\n    marginLeft: 8,\r\n  },\r\n  v3Spacing: {\r\n    marginLeft: 12,\r\n  },\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}